import torch
from torchvision import models, transforms
from PIL import Image

# Load pre-trained model
model = models.resnet50(pretrained=True)
model.eval()

# Transform for input image
transform = transforms.Compose([
    transforms.Resize(256),
    transforms.CenterCrop(224),
    transforms.ToTensor(),
    transforms.Normalize(
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]
    )
])

# Load and preprocess image
def predict_image(image_path):
    img = Image.open(image_path).convert('RGB')
    img_t = transform(img)
    batch_t = torch.unsqueeze(img_t, 0)

    with torch.no_grad():
        out = model(batch_t)
    _, index = torch.max(out, 1)

    # Load labels
    with open("https://raw.githubusercontent.com/pytorch/hub/master/imagenet_classes.txt") as f:
        labels = [line.strip() for line in f.readlines()]

    print("Predicted:", labels[index[0]])

# Example
predict_image("cat.jpg")  # replace with your image file
